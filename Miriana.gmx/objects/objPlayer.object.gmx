<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprChar1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create all global variables needed when player is created.
public();

battle = true;
//Scripting Credit: GameMaker Community

image_index = floor(random(image_number));
image_speed = 0;

//////////////////////
// Object Variables //
//////////////////////

//Mandatory variables. Don't get rid of these!
hsp     = 0; //hspeed replacement
vsp     = 0; //vspeed replacement
jump    = 0; //Just a variable to check how many jumps you've made
free    = 1; //Whether you're in the air (1) or on the ground (0)
spr_dir = 1; //Sprite direction (useful for image_xscale)
hold    = 0; //Whether you're holding the left/right key

//Modify these to your heart's content.
can_use = true;
grv_speed = 0.8;  //Speed at which vsp increases
air_frict = 0.15; //Number to decrease hsp by when no key is pressed in air
gnd_frict = 0.85; //Number to decrease hsp by when no key is pressed on ground
max_slp   = 9;    //Highest slope (in px)
max_speed = 0;    //Max speed to go by
acc_speed = 0.5;  //How much to increase the hsp by
jmp_speed = 15;   //How many pixels per step you jump by(decreases by grv_speed every step)
max_jump  = 2;    //Maximum amount of times you can jump before falling to ground(Starting from ground)

  //////////////////
 // Player Stats //
//////////////////

level = 10;
maxHP = floor(((370 * level) / 9.7)*hpBooster);
hp = maxHP;
str = floor(strBooster+((level*6)/5.7));
def = floor(defBooster*(3*level/6));

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (battle == true) {
//Taking Damage
    if (hp &lt;= 0) {
        room_restart();
    }

    {
//Movements
    sideMotion(keyboard_check(vk_right) == true, keyboard_check(vk_space) == true, keyboard_check(vk_left) == true);

    if (jump == max_jump) || (free == false) { 
        max_jump = 2; //Reset the max amount of jumps whenever you hit ground, or you're reached the max jump
    }
  ///////////////
 // Snow Mods //
///////////////
 
//Change Direction/Face which direction you are going.
    image_xscale = spr_dir;

//Sprint
    if (keyboard_check(vk_shift) == true &amp;&amp; fight == false ) { max_speed = 9; image_speed = 0.5} else {max_speed = 5; image_speed = 0.3; }

    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSlime">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (objSlime.image_index &gt; 4 &amp;&amp; objSlime.image_index &lt; 7) {
    if (blocking == true) {
        //add code for negated damage
        image_alpha = -1;
        alarm[0] = 7;
        hp -= floor(irandom_range(other.str/self.def, other.str*1.2/self.def));
    } else {
        //add code for regular damage
        image_alpha = -1;
        alarm[0] = 7;
        hp -= floor(irandom_range(other.str, other.str*1.2));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>y = yprevious;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
